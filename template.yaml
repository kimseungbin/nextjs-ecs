AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::LanguageExtensions
Description: Wishket Frontend AWS infrastructure.
Parameters:
  Project:
    Type: String
    Default: fe
  Environment:
    Type: String
    Description: Specifies the deployment environment for the AWS infrastructure.
    AllowedValues:
      - test
      - dev
      - stage
      - prod
  VpcCidr:
    Type: String
    AllowedPattern: "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})"
    Default: 10.0.0.0/16
    Description: The CIDR block of the VPC.
  CertificationArn:
    Type: String
    Description: |
      The ARN of the AWS Certificate Manager (ACM) certificate to use for SSL/TLS termination with the CloudFront distribution.
      This should be the ARN of a certificate that covers the domain or subdomain served by CloudFront.
  NestedStackBucket:
    Type: String
    Description: The name of Bucket holding nested stack templates.
Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
      - Label:
          default: General Configuration
        Parameters:
          - Project
      - Label:
          default: Network Configuration
        Parameters:
          - VpcCidr
Resources:


  #==================================================#
  # Elastic Container Service                        #
  #==================================================#

  NetworkStack:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub
        - https://${BucketName}.s3.${AWS::Region}.amazonaws.com/${FileName}
        - BucketName: !Ref NestedStackBucket
          FileName: network.yaml
      Parameters:
        VpcCidr: !Ref VpcCidr
  AuthService:
    Type: AWS::CloudFormation::Stack
    DependsOn:
      - NetworkStack
    Properties:
      TemplateURL: !Sub
        - https://${BucketName}.s3.${AWS::Region}.amazonaws.com/${FileName}
        - BucketName: !Ref NestedStackBucket
          FileName: service.yaml
      Parameters:
        Cluster: !Ref Cluster
        ExecutionRoleArn: !GetAtt [ ExecutionRole, Arn ]
        TaskDefinitionLogGroup: !Ref TaskDefinitionLogGroup
        NetworkStack: !Select [ 1, !Split [ '/', !Ref NetworkStack ] ]
  YozmService:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub
        - https://${BucketName}.s3.${AWS::Region}.amazonaws.com/${FileName}
        - BucketName: !Ref NestedStackBucket
          FileName: service.yaml
      Parameters:
        Cluster: !Ref Cluster
        ExecutionRoleArn: !GetAtt [ ExecutionRole, Arn ]
        TaskDefinitionLogGroup: !Ref TaskDefinitionLogGroup
        NetworkStack: !Select [ 1, !Split [ '/', !Ref NetworkStack ] ]
  Cluster:
    Type: AWS::ECS::Cluster
  ExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: ecs-tasks.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AmazonECSTaskExecutionRolePolicy
  TaskDefinitionLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      RetentionInDays: 7
