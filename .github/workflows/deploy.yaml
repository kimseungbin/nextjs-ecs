name: Deploy to ECS Fargate
on:
  pull_request:
    types:
      - closed
    branches:
      - main
      - release
permissions:
  contents: read
  id-token: write # Required to fetch OpenID Connect token.
env:
  ECR_REPOSITORY:
jobs:
  deploy:
    name: Deploy to ECS Fargate with Canary Deployment
    if: github.event.pull_request.merged == true
    runs-on: ubuntu-latest
    # replace branch name
    environment: ${{ github.ref == 'refs/heads/main' && 'stage' || github.ref == 'refs/heads/release' && 'production' }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ vars.OIDC_ARN }}
          aws-region: ap-northeast-2
      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2
#      - name: Build, tag, and push image to Amazon ECR
#        id: build-image
#        env:
#          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
#          ECR_REPOSITORY: ${{ vars.ECR_REPOSITORY }}
#          IMAGE_TAG: ${{ github.sha }}
#        run: |
#          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG ./test-app
#          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
      - name: Build and push image to Amazon ECR
        id: build-image
        uses: docker/build-push-action@v6
        with:
          context: ./test-app
          push: true
          tags: ${{ steps.login-ecr.outputs.registry }}/${{ vars.ECR_REPOSITORY }}:${{ github.sha }}
          cache-to: type=gha
          cache-from: type=gha, mode=max
      - name: Download task definition
        env:
          TASK_DEFINITION_FAMILY: ${{ vars.TASK_DEFINITION_FAMILY }}
        run: |
          echo "Task Definition Family $TASK_DEFINITION_FAMILY"
          aws ecs describe-task-definition \
            --task-definition $TASK_DEFINITION_FAMILY \
            --query taskDefinition > task-definition.json
